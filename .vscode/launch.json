{
  // Utilisez IntelliSense pour en savoir plus sur les attributs possibles.
  // Pointez pour afficher la description des attributs existants.
  // Pour plus d'informations, visitez : https://go.microsoft.com/fwlink/?linkid=830387
  "version": "0.2.0",
  "configurations": [
    {
      "preLaunchTask": "k3s aws",
      "name": "k3s aws",
      "type": "go",
      "request": "launch",
      "mode": "auto",
      "program": "${workspaceFolder}",
      "cwd": "${env:HOME}/go/src/github.com/Fred78290/kubernetes-cloud-autoscaler",
      "args": [
        "--debug",
        "--listen=unix:/tmp/autoscaler.sock",
        "--request-timeout=120s",
        "--grpc-provider=externalgrpc",
        "--distribution=k3s",
        "--plateform=aws",
        "--plateform-config=${workspaceFolder}/.config/aws/aws-dev-k3s/provider.json",
        "--machines=${workspaceFolder}/.config/aws/aws-dev-k3s/machines.json",
        "--config=${workspaceFolder}/.config/aws/aws-dev-k3s/autoscaler.json",
        "--save=${workspaceFolder}/.config/aws/aws-dev-k3s/state.json",
        "--kubeconfig=${workspaceFolder}/.config/aws/aws-dev-k3s/config",
        "--log-level=debug"
      ]
    },
    {
      "preLaunchTask": "k3s desktop",
      "name": "k3s desktop",
      "type": "go",
      "request": "launch",
      "mode": "auto",
      "program": "${workspaceFolder}",
      "cwd": "${env:HOME}/go/src/github.com/Fred78290/kubernetes-cloud-autoscaler",
      "args": [
        "--listen=unix:/tmp/autoscaler.sock",
        "--request-timeout=120s",
        "--grpc-provider=externalgrpc",
        "--distribution=k3s",
        "--plateform=desktop",
        "--plateform-config=${workspaceFolder}/.config/desktop/desktop-dev-k3s/provider.json",
        "--machines=${workspaceFolder}/.config/desktop/desktop-dev-k3s/machines.json",
        "--config=${workspaceFolder}/.config/desktop/desktop-dev-k3s/autoscaler.json",
        "--save=${workspaceFolder}/.config/desktop/desktop-dev-k3s/state.json",
        "--kubeconfig=${workspaceFolder}/.config/desktop/desktop-dev-k3s/config",
        "--log-level=debug"
      ]
    },
    {
      "preLaunchTask": "k3s multipass",
      "name": "k3s multipass",
      "type": "go",
      "request": "launch",
      "mode": "auto",
      "program": "${workspaceFolder}",
      "cwd": "${env:HOME}/go/src/github.com/Fred78290/kubernetes-cloud-autoscaler",
      "args": [
        "--listen=unix:/tmp/autoscaler.sock",
        "--request-timeout=120s",
        "--grpc-provider=externalgrpc",
        "--distribution=k3s",
        "--plateform=multipass",
        "--plateform-config=${workspaceFolder}/.config/multipass/multipass-dev-k3s/provider.json",
        "--machines=${workspaceFolder}/.config/multipass/multipass-dev-k3s/machines.json",
        "--config=${workspaceFolder}/.config/multipass/multipass-dev-k3s/autoscaler.json",
        "--save=${workspaceFolder}/.config/multipass/multipass-dev-k3s/state.json",
        "--kubeconfig=${workspaceFolder}/.config/multipass/multipass-dev-k3s/config",
        "--log-level=info"
      ]
    },
    {
      "preLaunchTask": "k3s openstack",
      "name": "k3s openstack",
      "type": "go",
      "request": "launch",
      "mode": "auto",
      "program": "${workspaceFolder}",
      "cwd": "${env:HOME}/go/src/github.com/Fred78290/kubernetes-cloud-autoscaler",
      "args": [
        "--listen=unix:/tmp/autoscaler.sock",
        "--request-timeout=120s",
        "--grpc-provider=externalgrpc",
        "--distribution=k3s",
        "--plateform=openstack",
        "--plateform-config=${workspaceFolder}/.config/openstack/openstack-dev-k3s/provider.json",
        "--machines=${workspaceFolder}/.config/openstack/openstack-dev-k3s/machines.json",
        "--config=${workspaceFolder}/.config/openstack/openstack-dev-k3s/autoscaler.json",
        "--save=${workspaceFolder}/.config/openstack/openstack-dev-k3s/state.json",
        "--kubeconfig=${workspaceFolder}/.config/openstack/openstack-dev-k3s/config",
        "--log-level=debug"
      ]
    },
    {
      "preLaunchTask": "k3s cloudstack",
      "name": "k3s cloudstack",
      "type": "go",
      "request": "launch",
      "mode": "auto",
      "program": "${workspaceFolder}",
      "cwd": "${env:HOME}/go/src/github.com/Fred78290/kubernetes-cloud-autoscaler",
      "args": [
        "--listen=unix:/tmp/autoscaler.sock",
        "--request-timeout=120s",
        "--grpc-provider=externalgrpc",
        "--distribution=k3s",
        "--plateform=cloudstack",
        "--plateform-config=${workspaceFolder}/.config/cloudstack/cloudstack-dev-k3s/provider.json",
        "--machines=${workspaceFolder}/.config/cloudstack/cloudstack-dev-k3s/machines.json",
        "--config=${workspaceFolder}/.config/cloudstack/cloudstack-dev-k3s/autoscaler.json",
        "--save=${workspaceFolder}/.config/cloudstack/cloudstack-dev-k3s/state.json",
        "--kubeconfig=${workspaceFolder}/.config/cloudstack/cloudstack-dev-k3s/config",
        "--log-level=debug"
      ]
    },
    {
      "preLaunchTask": "k3s lxd",
      "name": "k3s lxd",
      "type": "go",
      "request": "launch",
      "mode": "auto",
      "program": "${workspaceFolder}",
      "cwd": "${env:HOME}/go/src/github.com/Fred78290/kubernetes-cloud-autoscaler",
      "args": [
        "--listen=unix:/tmp/autoscaler.sock",
        "--request-timeout=120s",
        "--grpc-provider=externalgrpc",
        "--distribution=k3s",
        "--plateform=lxd",
        "--plateform-config=${workspaceFolder}/.config/lxd/lxd-dev-k3s/provider.json",
        "--machines=${workspaceFolder}/.config/lxd/lxd-dev-k3s/machines.json",
        "--config=${workspaceFolder}/.config/lxd/lxd-dev-k3s/autoscaler.json",
        "--save=${workspaceFolder}/.config/lxd/lxd-dev-k3s/state.json",
        "--kubeconfig=${workspaceFolder}/.config/lxd/lxd-dev-k3s/config",
        "--log-level=debug"
      ]
    },
    {
      "preLaunchTask": "k3s vsphere",
      "name": "k3s vsphere",
      "type": "go",
      "request": "launch",
      "mode": "auto",
      "program": "${workspaceFolder}",
      "cwd": "${env:HOME}/go/src/github.com/Fred78290/kubernetes-cloud-autoscaler",
      "args": [
        "--listen=unix:/tmp/autoscaler.sock",
        "--request-timeout=120s",
        "--grpc-provider=externalgrpc",
        "--distribution=k3s",
        "--plateform=vsphere",
        "--plateform-config=${workspaceFolder}/.config/vsphere/vsphere-dev-k3s/provider.json",
        "--cloud-provider=external",
        "--machines=${workspaceFolder}/.config/vsphere/vsphere-dev-k3s/machines.json",
        "--config=${workspaceFolder}/.config/vsphere/vsphere-dev-k3s/autoscaler.json",
        "--save=${workspaceFolder}/.config/vsphere/vsphere-dev-k3s/state.json",
        "--kubeconfig=${workspaceFolder}/.config/vsphere/vsphere-dev-k3s/config",
        "--log-level=debug"
      ]
    },
    {
      "name": "------------------------------------------",
      "request": "custom",
      "type": "lldb"
    },
    {
      "preLaunchTask": "kubeadm aws",
      "name": "kubeadm aws",
      "type": "go",
      "request": "launch",
      "mode": "auto",
      "program": "${workspaceFolder}",
      "cwd": "${env:HOME}/go/src/github.com/Fred78290/kubernetes-cloud-autoscaler",
      "args": [
        "--listen=unix:/tmp/autoscaler.sock",
        "--request-timeout=120s",
        "--grpc-provider=externalgrpc",
        "--distribution=kubeadm",
        "--plateform=aws",
        "--plateform-config=${workspaceFolder}/.config/aws/aws-dev-kubeadm/provider.json",
        "--cloud-provider=external",
        "--machines=${workspaceFolder}/.config/aws/aws-dev-kubeadm/machines.json",
        "--config=${workspaceFolder}/.config/aws/aws-dev-kubeadm/autoscaler.json",
        "--save=${workspaceFolder}/.config/aws/aws-dev-kubeadm/state.json",
        "--kubeconfig=${workspaceFolder}/.config/aws/aws-dev-kubeadm/config",
        "--log-level=info"
      ]
    },
    {
      "preLaunchTask": "kubeadm desktop",
      "name": "kubeadm desktop",
      "type": "go",
      "request": "launch",
      "mode": "auto",
      "program": "${workspaceFolder}",
      "cwd": "${env:HOME}/go/src/github.com/Fred78290/kubernetes-cloud-autoscaler",
      "args": [
        "--listen=unix:/tmp/autoscaler.sock",
        "--request-timeout=120s",
        "--grpc-provider=externalgrpc",
        "--distribution=kubeadm",
        "--plateform=desktop",
        "--plateform-config=${workspaceFolder}/.config/desktop/desktop-dev-kubeadm/provider.json",
        "--cloud-provider=external",
        "--machines=${workspaceFolder}/.config/desktop/desktop-dev-kubeadm/machines.json",
        "--config=${workspaceFolder}/.config/desktop/desktop-dev-kubeadm/autoscaler.json",
        "--save=${workspaceFolder}/.config/desktop/desktop-dev-kubeadm/state.json",
        "--kubeconfig=${workspaceFolder}/.config/desktop/desktop-dev-kubeadm/config",
        "--log-level=info"
      ]
    },
    {
      "preLaunchTask": "kubeadm multipass",
      "name": "kubeadm multipass",
      "type": "go",
      "request": "launch",
      "mode": "auto",
      "program": "${workspaceFolder}",
      "cwd": "${env:HOME}/go/src/github.com/Fred78290/kubernetes-cloud-autoscaler",
      "args": [
        "--listen=unix:/tmp/autoscaler.sock",
        "--request-timeout=120s",
        "--grpc-provider=externalgrpc",
        "--distribution=kubeadm",
        "--plateform=multipass",
        "--plateform-config=${workspaceFolder}/.config/multipass/multipass-dev-kubeadm/provider.json",
        "--cloud-provider=external",
        "--machines=${workspaceFolder}/.config/multipass/multipass-dev-kubeadm/machines.json",
        "--config=${workspaceFolder}/.config/multipass/multipass-dev-kubeadm/autoscaler.json",
        "--save=${workspaceFolder}/.config/multipass/multipass-dev-kubeadm/state.json",
        "--kubeconfig=${workspaceFolder}/.config/multipass/multipass-dev-kubeadm/config",
        "--log-level=info"
      ]
    },
    {
      "preLaunchTask": "kubeadm openstack",
      "name": "kubeadm openstack",
      "type": "go",
      "request": "launch",
      "mode": "auto",
      "program": "${workspaceFolder}",
      "cwd": "${env:HOME}/go/src/github.com/Fred78290/kubernetes-cloud-autoscaler",
      "args": [
        "--listen=unix:/tmp/autoscaler.sock",
        "--request-timeout=120s",
        "--grpc-provider=externalgrpc",
        "--distribution=kubeadm",
        "--plateform=openstack",
        "--plateform-config=${workspaceFolder}/.config/openstack/openstack-dev-kubeadm/provider.json",
        "--cloud-provider=external",
        "--machines=${workspaceFolder}/.config/openstack/openstack-dev-kubeadm/machines.json",
        "--config=${workspaceFolder}/.config/openstack/openstack-dev-kubeadm/autoscaler.json",
        "--save=${workspaceFolder}/.config/openstack/openstack-dev-kubeadm/state.json",
        "--kubeconfig=${workspaceFolder}/.config/openstack/openstack-dev-kubeadm/config",
        "--log-level=info"
      ]
    },
    {
      "preLaunchTask": "kubeadm cloudstack",
      "name": "kubeadm cloudstack",
      "type": "go",
      "request": "launch",
      "mode": "auto",
      "program": "${workspaceFolder}",
      "cwd": "${env:HOME}/go/src/github.com/Fred78290/kubernetes-cloud-autoscaler",
      "args": [
        "--listen=unix:/tmp/autoscaler.sock",
        "--request-timeout=120s",
        "--grpc-provider=externalgrpc",
        "--distribution=kubeadm",
        "--plateform=cloudstack",
        "--plateform-config=${workspaceFolder}/.config/cloudstack/cloudstack-dev-kubeadm/provider.json",
        "--cloud-provider=external",
        "--machines=${workspaceFolder}/.config/cloudstack/cloudstack-dev-kubeadm/machines.json",
        "--config=${workspaceFolder}/.config/cloudstack/cloudstack-dev-kubeadm/autoscaler.json",
        "--save=${workspaceFolder}/.config/cloudstack/cloudstack-dev-kubeadm/state.json",
        "--kubeconfig=${workspaceFolder}/.config/cloudstack/cloudstack-dev-kubeadm/config",
        "--log-level=info"
      ]
    },
    {
      "preLaunchTask": "kubeadm lxd",
      "name": "kubeadm lxd",
      "type": "go",
      "request": "launch",
      "mode": "auto",
      "program": "${workspaceFolder}",
      "cwd": "${env:HOME}/go/src/github.com/Fred78290/kubernetes-cloud-autoscaler",
      "args": [
        "--listen=unix:/tmp/autoscaler.sock",
        "--request-timeout=120s",
        "--grpc-provider=externalgrpc",
        "--distribution=kubeadm",
        "--plateform=lxd",
        "--plateform-config=${workspaceFolder}/.config/lxd/lxd-dev-kubeadm/provider.json",
        "--cloud-provider=external",
        "--machines=${workspaceFolder}/.config/lxd/lxd-dev-kubeadm/machines.json",
        "--config=${workspaceFolder}/.config/lxd/lxd-dev-kubeadm/autoscaler.json",
        "--save=${workspaceFolder}/.config/lxd/lxd-dev-kubeadm/state.json",
        "--kubeconfig=${workspaceFolder}/.config/lxd/lxd-dev-kubeadm/config",
        "--log-level=info"
      ]
    },
    {
      "preLaunchTask": "kubeadm vsphere",
      "name": "kubeadm vsphere",
      "type": "go",
      "request": "launch",
      "mode": "auto",
      "program": "${workspaceFolder}",
      "cwd": "${env:HOME}/go/src/github.com/Fred78290/kubernetes-cloud-autoscaler",
      "args": [
        "--listen=unix:/tmp/autoscaler.sock",
        "--request-timeout=120s",
        "--grpc-provider=externalgrpc",
        "--distribution=kubeadm",
        "--plateform=vsphere",
        "--plateform-config=${workspaceFolder}/.config/vsphere/vsphere-dev-kubeadm/provider.json",
        "--cloud-provider=external",
        "--machines=${workspaceFolder}/.config/vsphere/vsphere-dev-kubeadm/machines.json",
        "--config=${workspaceFolder}/.config/vsphere/vsphere-dev-kubeadm/autoscaler.json",
        "--save=${workspaceFolder}/.config/vsphere/vsphere-dev-kubeadm/state.json",
        "--kubeconfig=${workspaceFolder}/.config/vsphere/vsphere-dev-kubeadm/config",
        "--log-level=info"
      ]
    },
    {
      "name": "------------------------------------------",
      "request": "custom",
      "type": "lldb"
    },
    {
      "preLaunchTask": "rke2 aws",
      "name": "rke2 aws",
      "type": "go",
      "request": "launch",
      "mode": "auto",
      "program": "${workspaceFolder}",
      "cwd": "${env:HOME}/go/src/github.com/Fred78290/kubernetes-cloud-autoscaler",
      "args": [
        "--listen=unix:/tmp/autoscaler.sock",
        "--request-timeout=120s",
        "--grpc-provider=externalgrpc",
        "--distribution=rke2",
        "--plateform=aws",
        "--plateform-config=${workspaceFolder}/.config/aws/aws-dev-rke2/provider.json",
        "--cloud-provider=external",
        "--machines=${workspaceFolder}/.config/aws/aws-dev-rke2/machines.json",
        "--config=${workspaceFolder}/.config/aws/aws-dev-rke2/autoscaler.json",
        "--save=${workspaceFolder}/.config/aws/aws-dev-rke2/state.json",
        "--kubeconfig=${workspaceFolder}/.config/aws/aws-dev-rke2/config",
        "--log-level=info"
      ]
    },
    {
      "preLaunchTask": "rke2 desktop",
      "name": "rke2 desktop",
      "type": "go",
      "request": "launch",
      "mode": "auto",
      "program": "${workspaceFolder}",
      "cwd": "${env:HOME}/go/src/github.com/Fred78290/kubernetes-cloud-autoscaler",
      "args": [
        "--listen=unix:/tmp/autoscaler.sock",
        "--request-timeout=120s",
        "--grpc-provider=externalgrpc",
        "--distribution=rke2",
        "--plateform=desktop",
        "--plateform-config=${workspaceFolder}/.config/desktop/desktop-dev-rke2/provider.json",
        "--cloud-provider=external",
        "--machines=${workspaceFolder}/.config/desktop/desktop-dev-rke2/machines.json",
        "--config=${workspaceFolder}/.config/desktop/desktop-dev-rke2/autoscaler.json",
        "--save=${workspaceFolder}/.config/desktop/desktop-dev-rke2/state.json",
        "--kubeconfig=${workspaceFolder}/.config/desktop/desktop-dev-rke2/config",
        "--log-level=debug"
      ]
    },
    {
      "preLaunchTask": "rke2 multipass",
      "name": "rke2 multipass",
      "type": "go",
      "request": "launch",
      "mode": "auto",
      "program": "${workspaceFolder}",
      "cwd": "${env:HOME}/go/src/github.com/Fred78290/kubernetes-cloud-autoscaler",
      "args": [
        "--listen=unix:/tmp/autoscaler.sock",
        "--request-timeout=120s",
        "--grpc-provider=externalgrpc",
        "--distribution=rke2",
        "--plateform=multipass",
        "--plateform-config=${workspaceFolder}/.config/multipass/multipass-dev-rke2/provider.json",
        "--cloud-provider=external",
        "--machines=${workspaceFolder}/.config/multipass/multipass-dev-rke2/machines.json",
        "--config=${workspaceFolder}/.config/multipass/multipass-dev-rke2/autoscaler.json",
        "--save=${workspaceFolder}/.config/multipass/multipass-dev-rke2/state.json",
        "--kubeconfig=${workspaceFolder}/.config/multipass/multipass-dev-rke2/config",
        "--log-level=debug"
      ]
    },
    {
      "preLaunchTask": "rke2 openstack",
      "name": "rke2 openstack",
      "type": "go",
      "request": "launch",
      "mode": "auto",
      "program": "${workspaceFolder}",
      "cwd": "${env:HOME}/go/src/github.com/Fred78290/kubernetes-cloud-autoscaler",
      "args": [
        "--listen=unix:/tmp/autoscaler.sock",
        "--request-timeout=120s",
        "--grpc-provider=externalgrpc",
        "--distribution=rke2",
        "--plateform=openstack",
        "--plateform-config=${workspaceFolder}/.config/openstack/openstack-dev-rke2/provider.json",
        "--cloud-provider=external",
        "--machines=${workspaceFolder}/.config/openstack/openstack-dev-rke2/machines.json",
        "--config=${workspaceFolder}/.config/openstack/openstack-dev-rke2/autoscaler.json",
        "--save=${workspaceFolder}/.config/openstack/openstack-dev-rke2/state.json",
        "--kubeconfig=${workspaceFolder}/.config/openstack/openstack-dev-rke2/config",
        "--log-level=debug"
      ]
    },
    {
      "preLaunchTask": "rke2 cloudstack",
      "name": "rke2 cloudstack",
      "type": "go",
      "request": "launch",
      "mode": "auto",
      "program": "${workspaceFolder}",
      "cwd": "${env:HOME}/go/src/github.com/Fred78290/kubernetes-cloud-autoscaler",
      "args": [
        "--listen=unix:/tmp/autoscaler.sock",
        "--request-timeout=120s",
        "--grpc-provider=externalgrpc",
        "--distribution=rke2",
        "--plateform=cloudstack",
        "--plateform-config=${workspaceFolder}/.config/cloudstack/cloudstack-dev-rke2/provider.json",
        "--cloud-provider=external",
        "--machines=${workspaceFolder}/.config/cloudstack/cloudstack-dev-rke2/machines.json",
        "--config=${workspaceFolder}/.config/cloudstack/cloudstack-dev-rke2/autoscaler.json",
        "--save=${workspaceFolder}/.config/cloudstack/cloudstack-dev-rke2/state.json",
        "--kubeconfig=${workspaceFolder}/.config/cloudstack/cloudstack-dev-rke2/config",
        "--log-level=debug"
      ]
    },
    {
      "preLaunchTask": "rke2 lxd",
      "name": "rke2 lxd",
      "type": "go",
      "request": "launch",
      "mode": "auto",
      "program": "${workspaceFolder}",
      "cwd": "${env:HOME}/go/src/github.com/Fred78290/kubernetes-cloud-autoscaler",
      "args": [
        "--listen=unix:/tmp/autoscaler.sock",
        "--request-timeout=120s",
        "--grpc-provider=externalgrpc",
        "--distribution=rke2",
        "--plateform=lxd",
        "--plateform-config=${workspaceFolder}/.config/lxd/lxd-dev-rke2/provider.json",
        "--cloud-provider=external",
        "--machines=${workspaceFolder}/.config/lxd/lxd-dev-rke2/machines.json",
        "--config=${workspaceFolder}/.config/lxd/lxd-dev-rke2/autoscaler.json",
        "--save=${workspaceFolder}/.config/lxd/lxd-dev-rke2/state.json",
        "--kubeconfig=${workspaceFolder}/.config/lxd/lxd-dev-rke2/config",
        "--log-level=debug"
      ]
    },
    {
      "preLaunchTask": "rke2 vsphere",
      "name": "rke2 vsphere",
      "type": "go",
      "request": "launch",
      "mode": "auto",
      "program": "${workspaceFolder}",
      "cwd": "${env:HOME}/go/src/github.com/Fred78290/kubernetes-cloud-autoscaler",
      "args": [
        "--listen=unix:/tmp/autoscaler.sock",
        "--request-timeout=120s",
        "--grpc-provider=externalgrpc",
        "--distribution=rke2",
        "--plateform=vsphere",
        "--plateform-config=${workspaceFolder}/.config/vsphere/vsphere-dev-rke2/provider.json",
        "--cloud-provider=external",
        "--machines=${workspaceFolder}/.config/vsphere/vsphere-dev-rke2/machines.json",
        "--config=${workspaceFolder}/.config/vsphere/vsphere-dev-rke2/autoscaler.json",
        "--save=${workspaceFolder}/.config/vsphere/vsphere-dev-rke2/state.json",
        "--kubeconfig=${workspaceFolder}/.config/vsphere/vsphere-dev-rke2/config",
        "--log-level=debug"
      ]
    },
    {
      "name": "------------------------------------------",
      "request": "custom",
      "type": "lldb"
    },
    {
      "preLaunchTask": "microk8s aws",
      "name": "microk8s aws",
      "type": "go",
      "request": "launch",
      "mode": "auto",
      "program": "${workspaceFolder}",
      "cwd": "${env:HOME}/go/src/github.com/Fred78290/kubernetes-cloud-autoscaler",
      "args": [
        "--listen=unix:/tmp/autoscaler.sock",
        "--request-timeout=120s",
        "--grpc-provider=externalgrpc",
        "--distribution=microk8s",
        "--plateform=aws",
        "--plateform-config=${workspaceFolder}/.config/aws/aws-dev-microk8s/provider.json",
        "--cloud-provider=external",
        "--machines=${workspaceFolder}/.config/aws/aws-dev-microk8s/machines.json",
        "--config=${workspaceFolder}/.config/aws/aws-dev-microk8s/autoscaler.json",
        "--save=${workspaceFolder}/.config/aws/aws-dev-microk8s/state.json",
        "--kubeconfig=${workspaceFolder}/.config/aws/aws-dev-microk8s/config",
        "--log-level=info"
      ]
    },
    {
      "preLaunchTask": "microk8s desktop",
      "name": "microk8s desktop",
      "type": "go",
      "request": "launch",
      "mode": "auto",
      "program": "${workspaceFolder}",
      "cwd": "${env:HOME}/go/src/github.com/Fred78290/kubernetes-cloud-autoscaler",
      "args": [
        "--listen=unix:/tmp/autoscaler.sock",
        "--request-timeout=120s",
        "--grpc-provider=externalgrpc",
        "--distribution=microk8s",
        "--plateform=desktop",
        "--plateform-config=${workspaceFolder}/.config/desktop/desktop-dev-microk8s/provider.json",
        "--cloud-provider=external",
        "--machines=${workspaceFolder}/.config/desktop/desktop-dev-microk8s/machines.json",
        "--config=${workspaceFolder}/.config/desktop/desktop-dev-microk8s/autoscaler.json",
        "--save=${workspaceFolder}/.config/desktop/desktop-dev-microk8s/state.json",
        "--kubeconfig=${workspaceFolder}/.config/desktop/desktop-dev-microk8s/config",
        "--log-level=debug"
      ]
    },
    {
      "preLaunchTask": "microk8s multipass",
      "name": "microk8s multipass",
      "type": "go",
      "request": "launch",
      "mode": "auto",
      "program": "${workspaceFolder}",
      "cwd": "${env:HOME}/go/src/github.com/Fred78290/kubernetes-cloud-autoscaler",
      "args": [
        "--listen=unix:/tmp/autoscaler.sock",
        "--request-timeout=120s",
        "--grpc-provider=externalgrpc",
        "--distribution=microk8s",
        "--plateform=multipass",
        "--plateform-config=${workspaceFolder}/.config/multipass/multipass-dev-microk8s/provider.json",
        "--cloud-provider=external",
        "--machines=${workspaceFolder}/.config/multipass/multipass-dev-microk8s/machines.json",
        "--config=${workspaceFolder}/.config/multipass/multipass-dev-microk8s/autoscaler.json",
        "--save=${workspaceFolder}/.config/multipass/multipass-dev-microk8s/state.json",
        "--kubeconfig=${workspaceFolder}/.config/multipass/multipass-dev-microk8s/config",
        "--log-level=debug"
      ]
    },
    {
      "preLaunchTask": "microk8s openstack",
      "name": "microk8s openstack",
      "type": "go",
      "request": "launch",
      "mode": "auto",
      "program": "${workspaceFolder}",
      "cwd": "${env:HOME}/go/src/github.com/Fred78290/kubernetes-cloud-autoscaler",
      "args": [
        "--listen=unix:/tmp/autoscaler.sock",
        "--request-timeout=120s",
        "--grpc-provider=externalgrpc",
        "--distribution=microk8s",
        "--plateform=openstack",
        "--plateform-config=${workspaceFolder}/.config/openstack/openstack-dev-microk8s/provider.json",
        "--cloud-provider=external",
        "--machines=${workspaceFolder}/.config/openstack/openstack-dev-microk8s/machines.json",
        "--config=${workspaceFolder}/.config/openstack/openstack-dev-microk8s/autoscaler.json",
        "--save=${workspaceFolder}/.config/openstack/openstack-dev-microk8s/state.json",
        "--kubeconfig=${workspaceFolder}/.config/openstack/openstack-dev-microk8s/config",
        "--log-level=debug"
      ]
    },
    {
      "preLaunchTask": "microk8s cloudstack",
      "name": "microk8s cloudstack",
      "type": "go",
      "request": "launch",
      "mode": "auto",
      "program": "${workspaceFolder}",
      "cwd": "${env:HOME}/go/src/github.com/Fred78290/kubernetes-cloud-autoscaler",
      "args": [
        "--listen=unix:/tmp/autoscaler.sock",
        "--request-timeout=120s",
        "--grpc-provider=externalgrpc",
        "--distribution=microk8s",
        "--plateform=cloudstack",
        "--plateform-config=${workspaceFolder}/.config/cloudstack/cloudstack-dev-microk8s/provider.json",
        "--cloud-provider=external",
        "--machines=${workspaceFolder}/.config/cloudstack/cloudstack-dev-microk8s/machines.json",
        "--config=${workspaceFolder}/.config/cloudstack/cloudstack-dev-microk8s/autoscaler.json",
        "--save=${workspaceFolder}/.config/cloudstack/cloudstack-dev-microk8s/state.json",
        "--kubeconfig=${workspaceFolder}/.config/cloudstack/cloudstack-dev-microk8s/config",
        "--log-level=debug"
      ]
    },
    {
      "preLaunchTask": "microk8s lxd",
      "name": "microk8s lxd",
      "type": "go",
      "request": "launch",
      "mode": "auto",
      "program": "${workspaceFolder}",
      "cwd": "${env:HOME}/go/src/github.com/Fred78290/kubernetes-cloud-autoscaler",
      "args": [
        "--listen=unix:/tmp/autoscaler.sock",
        "--request-timeout=120s",
        "--grpc-provider=externalgrpc",
        "--distribution=microk8s",
        "--plateform=lxd",
        "--plateform-config=${workspaceFolder}/.config/lxd/lxd-dev-microk8s/provider.json",
        "--cloud-provider=external",
        "--machines=${workspaceFolder}/.config/lxd/lxd-dev-microk8s/machines.json",
        "--config=${workspaceFolder}/.config/lxd/lxd-dev-microk8s/autoscaler.json",
        "--save=${workspaceFolder}/.config/lxd/lxd-dev-microk8s/state.json",
        "--kubeconfig=${workspaceFolder}/.config/lxd/lxd-dev-microk8s/config",
        "--log-level=debug"
      ]
    },
    {
      "preLaunchTask": "microk8s vsphere",
      "name": "microk8s vsphere",
      "type": "go",
      "request": "launch",
      "mode": "auto",
      "program": "${workspaceFolder}",
      "cwd": "${env:HOME}/go/src/github.com/Fred78290/kubernetes-cloud-autoscaler",
      "args": [
        "--listen=unix:/tmp/autoscaler.sock",
        "--request-timeout=120s",
        "--grpc-provider=externalgrpc",
        "--distribution=microk8s",
        "--plateform=vsphere",
        "--plateform-config=${workspaceFolder}/.config/vsphere/vsphere-dev-microk8s/provider.json",
        "--cloud-provider=external",
        "--machines=${workspaceFolder}/.config/vsphere/vsphere-dev-microk8s/machines.json",
        "--config=${workspaceFolder}/.config/vsphere/vsphere-dev-microk8s/autoscaler.json",
        "--save=${workspaceFolder}/.config/vsphere/vsphere-dev-microk8s/state.json",
        "--kubeconfig=${workspaceFolder}/.config/vsphere/vsphere-dev-microk8s/config",
        "--log-level=debug"
      ]
    },
    {
      "name": "------------------------------------------",
      "request": "custom",
      "type": "lldb"
    },
    {
      "name": "Test Test_Server vsphere",
      "type": "go",
      "request": "launch",
      "mode": "test",
      "program": "${workspaceFolder}/server/server_test.go",
      "env": {
        "DEFAULT_MACHINE": "medium",
        "PLATEFORM": "vsphere",
        "TEST_SERVER_CONFIG": "${workspaceFolder}/test/config/server.json",
        "TEST_PROVIDER_CONFIG": "${workspaceFolder}/test/config/vsphere/provider.json",
        "TEST_CONFIG": "${workspaceFolder}/test/config/vsphere/config.json",
        "TEST_MACHINES_CONFIG": "${workspaceFolder}/test/config/vsphere/machines.json",
        "TestServer": "YES",
        "TestServer_NodeGroups": "YES",
        "TestServer_NodeGroupForNode": "YES",
        "TestServer_HasInstance": "YES",
        "TestServer_Pricing": "YES",
        "TestServer_GetAvailableMachineTypes": "YES",
        "TestServer_NewNodeGroup": "YES",
        "TestServer_GetResourceLimiter": "YES",
        "TestServer_Cleanup": "YES",
        "TestServer_Refresh": "YES",
        "TestServer_TargetSize": "YES",
        "TestServer_IncreaseSize": "YES",
        "TestServer_DecreaseTargetSize": "YES",
        "TestServer_DeleteNodes": "YES",
        "TestServer_Id": "YES",
        "TestServer_Debug": "YES",
        "TestServer_Nodes": "YES",
        "TestServer_TemplateNodeInfo": "YES",
        "TestServer_Exist": "YES",
        "TestServer_Create": "YES",
        "TestServer_Delete": "YES",
        "TestServer_Autoprovisioned": "YES",
        "TestServer_Belongs": "YES",
        "TestServer_NodePrice": "YES",
        "TestServer_PodPrice": "YES"
      },
      "envFile": "${workspaceFolder}/.env",
      "showLog": false,
      "args": ["-test.run", "^Test_Server$"]
    },
    {
      "name": "Test Test_Server aws",
      "type": "go",
      "request": "launch",
      "mode": "test",
      "program": "${workspaceFolder}/server/server_test.go",
      "env": {
        "DEFAULT_MACHINE": "medium",
        "PLATEFORM": "aws",
        "KUBE_ENGINE": "external",
        "TEST_SERVER_CONFIG": "${workspaceFolder}/test/config/server.json",
        "TEST_PROVIDER_CONFIG": "${workspaceFolder}/test/config/aws/provider.json",
        "TEST_CONFIG": "${workspaceFolder}/test/config/aws/config.json",
        "TEST_MACHINES_CONFIG": "${workspaceFolder}/test/config/aws/machines.json",
        "TestServer": "YES",
        "TestServer_NodeGroups": "YES",
        "TestServer_NodeGroupForNode": "YES",
        "TestServer_HasInstance": "YES",
        "TestServer_Pricing": "YES",
        "TestServer_GetAvailableMachineTypes": "YES",
        "TestServer_NewNodeGroup": "YES",
        "TestServer_GetResourceLimiter": "YES",
        "TestServer_Cleanup": "YES",
        "TestServer_Refresh": "YES",
        "TestServer_TargetSize": "YES",
        "TestServer_IncreaseSize": "YES",
        "TestServer_DecreaseTargetSize": "YES",
        "TestServer_DeleteNodes": "YES",
        "TestServer_Id": "YES",
        "TestServer_Debug": "YES",
        "TestServer_Nodes": "YES",
        "TestServer_TemplateNodeInfo": "YES",
        "TestServer_Exist": "YES",
        "TestServer_Create": "YES",
        "TestServer_Delete": "YES",
        "TestServer_Autoprovisioned": "YES",
        "TestServer_Belongs": "YES",
        "TestServer_NodePrice": "YES",
        "TestServer_PodPrice": "YES"
      },
      "envFile": "${workspaceFolder}/.env",
      "showLog": false,
      "args": ["-test.run", "^Test_Server$"]
    },
    {
      "name": "Test Test_Nodegroup vsphere",
      "type": "go",
      "request": "launch",
      "mode": "test",
      "program": "${workspaceFolder}/server/server_test.go",
      "env": {
        "DEFAULT_MACHINE": "medium",
        "PLATEFORM": "vsphere",
        "TEST_SERVER_CONFIG": "${workspaceFolder}/test/config/server.json",
        "TEST_PROVIDER_CONFIG": "${workspaceFolder}/test/config/vsphere/provider.json",
        "TEST_CONFIG": "${workspaceFolder}/test/config/vsphere/config.json",
        "TEST_MACHINES_CONFIG": "${workspaceFolder}/test/config/vsphere/machines.json",
        "TestNodegroup": "YES",
        "TestNodeGroup_launchVM": "YES",
        "TestNodeGroup_stopVM": "YES",
        "TestNodeGroup_startVM": "YES",
        "TestNodeGroup_statusVM": "YES",
        "TestNodeGroup_deleteVM": "YES",
        "TestNodeGroupGroup_addNode": "YES",
        "TestNodeGroupGroup_deleteNode": "YES",
        "TestNodeGroupGroup_deleteNodeGroup": "YES"
      },
      "envFile": "${workspaceFolder}/.env",
      "showLog": false,
      "args": ["-test.run", "^Test_Nodegroup$"]
    },
    {
      "name": "Test Test_Nodegroup aws",
      "type": "go",
      "request": "launch",
      "mode": "test",
      "program": "${workspaceFolder}/server/server_test.go",
      "env": {
        "DEFAULT_MACHINE": "t4g.small",
        "PLATEFORM": "aws",
        "KUBE_ENGINE": "external",
        "TEST_SERVER_CONFIG": "${workspaceFolder}/test/config/server.json",
        "TEST_PROVIDER_CONFIG": "${workspaceFolder}/test/config/aws/provider.json",
        "TEST_CONFIG": "${workspaceFolder}/test/config/aws/config.json",
        "TEST_MACHINES_CONFIG": "${workspaceFolder}/test/config/aws/machines.json",
        "TestNodegroup": "YES",
        "TestNodeGroup_launchVM": "YES",
        "TestNodeGroup_stopVM": "YES",
        "TestNodeGroup_startVM": "YES",
        "TestNodeGroup_statusVM": "YES",
        "TestNodeGroup_deleteVM": "YES",
        "TestNodeGroupGroup_addNode": "YES",
        "TestNodeGroupGroup_deleteNode": "YES",
        "TestNodeGroupGroup_deleteNodeGroup": "YES"
      },
      "envFile": "${workspaceFolder}/.env",
      "showLog": false,
      "args": ["-test.run", "^Test_Nodegroup$"]
    },
    {
      "name": "Test Test_Providers vcsim",
      "type": "go",
      "request": "launch",
      "mode": "test",
      "program": "${workspaceFolder}/providers/providers_test.go",
      "preLaunchTask": "launch vcsim",
      "postDebugTask": "kill vcsim",
      "env": {
        "DEFAULT_MACHINE": "medium",
        "GITHUB_RUN_ID": "123456",
        "SSH_KEYFILE": "id_rsa",
        "SEED_USER": "ubuntu",
        "SEED_IMAGE": "DC0_H0_VM0",
        "TEST_MODE": "1",
        "TEST_SERVER_CONFIG": "${workspaceFolder}/test/config/server.json",
        "TEST_PROVIDER_CONFIG": "${workspaceFolder}/test/config/vsphere/provider.json",
        "TEST_CONFIG": "${workspaceFolder}/test/config/vsphere/config.json",
        "TEST_MACHINES_CONFIG": "${workspaceFolder}/test/config/vsphere/machines.json",
        "GOVC_URL": "https://127.0.0.1:8989/sdk",
        "GOVC_INSECURE": "1",
        "GOVC_USERNAME": "user",
        "GOVC_PASSWORD": "pass",
        "GOVC_DATACENTER": "DC0",
        "GOVC_DATASTORE": "LocalDS_0",
        "GOVC_RESOURCE_POOL": "/DC0/host/DC0_H0/Resources",
        "GOVC_FOLDER": "",
        "GOVC_TEMPLATE_NAME": "DC0_H0_VM0",
        "GOVC_NETWORK_PRIVATE": "DVS0",
        "GOVC_NETWORK_PUBLIC": "VM Network",
        "PLATEFORM": "vsphere",
        "Test_createVM": "YES",
        "Test_getVM": "YES",
        "Test_statusVM": "YES",
        "Test_powerOnVM": "YES",
        "Test_powerOffVM": "YES",
        "Test_shutdownGuest": "YES",
        "Test_deleteVM": "YES"
      },
      "showLog": false,
      "args": ["-test.run", "^Test_Providers$"]
    },
    {
      "name": "Test Test_Providers vsphere",
      "type": "go",
      "request": "launch",
      "mode": "test",
      "program": "${workspaceFolder}/providers/providers_test.go",
      "envFile": "${workspaceFolder}/.env",
      "env": {
        "DEFAULT_MACHINE": "medium",
        "GITHUB_RUN_ID": "123456",
        "SSH_KEYFILE": "id_rsa",
        "SEED_USER": "ubuntu",
        "SEED_IMAGE": "DC0_H0_VM0",
        "TEST_MODE": "0",
        "TEST_SERVER_CONFIG": "${workspaceFolder}/test/config/server.json",
        "TEST_PROVIDER_CONFIG": "${workspaceFolder}/test/config/vsphere/provider.json",
        "TEST_CONFIG": "${workspaceFolder}/test/config/vsphere/config.json",
        "TEST_MACHINES_CONFIG": "${workspaceFolder}/test/config/vsphere/machines.json",
        "PLATEFORM": "vsphere",
        "Test_createVM": "YES",
        "Test_getVM": "YES",
        "Test_statusVM": "YES",
        "Test_powerOnVM": "YES",
        "Test_powerOffVM": "YES",
        "Test_shutdownGuest": "YES",
        "Test_deleteVM": "YES"
      },
      "showLog": false,
      "args": ["-test.run", "^Test_Providers$"]
    },
    {
      "name": "Test Test_Providers aws",
      "type": "go",
      "request": "launch",
      "mode": "test",
      "program": "${workspaceFolder}/providers/providers_test.go",
      "envFile": "${workspaceFolder}/.env",
      "env": {
        "DEFAULT_MACHINE": "t4g.small",
        "AWS_SEED_IMAGE": "ami-0a636034c582e2138",
        "SEED_USER": "ubuntu",
        "TEST_MODE": "0",
        "TEST_SERVER_CONFIG": "${workspaceFolder}/test/config/server.json",
        "TEST_PROVIDER_CONFIG": "${workspaceFolder}/test/config/aws/provider.json",
        "TEST_CONFIG": "${workspaceFolder}/test/config/aws/config.json",
        "TEST_MACHINES_CONFIG": "${workspaceFolder}/test/config/aws/machines.json",
        "PLATEFORM": "aws",
        "Test_createVM": "YES",
        "Test_getVM": "YES",
        "Test_statusVM": "YES",
        "Test_powerOnVM": "YES",
        "Test_powerOffVM": "YES",
        "Test_shutdownGuest": "YES",
        "Test_deleteVM": "YES"
      },
      "showLog": false,
      "args": ["-test.run", "^Test_Providers$"]
    },
    {
      "name": "------------------------------------------",
      "request": "custom",
      "type": "lldb"
    }
  ]
}
